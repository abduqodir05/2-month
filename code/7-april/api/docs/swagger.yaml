definitions:
  handler.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: integer
    type: object
  models.CreateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      login:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.Login:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      register:
        type: string
    type: object
  models.User:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      login:
        type: string
      password:
        type: string
      phone_number:
        type: string
      register:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Create Login
      operationId: login
      parameters:
      - description: LoginRequestBody
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "201":
          description: GetLoginBody
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create Login
      tags:
      - Login
  /register:
    post:
      consumes:
      - application/json
      description: Create Register
      operationId: register
      parameters:
      - description: RegisterRequestBody
        in: body
        name: Regester
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: GetRegisterBody
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create Register
      tags:
      - Register
  /user:
    get:
      consumes:
      - application/json
      description: Get List User
      operationId: get_list_user
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: CreateUserRequest
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get By ID User
      operationId: get_by_id_user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID User
      tags:
      - User
swagger: "2.0"
